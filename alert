import pandas as pd
from pyzabbix import ZabbixAPI

# Zabbix server URL and credentials
zabbix_url = 'http://your-zabbix-server.com/zabbix'
zabbix_user = 'your_username'
zabbix_password = 'your_password'

# Initialize Zabbix API connection
zapi = ZabbixAPI(zabbix_url)
zapi.login(zabbix_user, zabbix_password)

# Host groups to retrieve data for
host_groups = ['abc', 'def', 'ghi']

# Get the host group IDs
host_group_ids = [group['groupid'] for group in zapi.hostgroup.get(filter={'name': host_groups})]

# Set the time range for recent problems (in seconds)
time_range = 86400  # 1 day

# Get recent problems for each host group
problem_counts = []
severity_mapping = {
    'Not classified': 0,
    'Information': 1,
    'Warning': 2,
    'Average': 3,
    'High': 4,
    'Disaster': 5
}

for group_id, group_name in zip(host_group_ids, host_groups):
    recent_problems = zapi.problem.get(groupids=group_id, time_from=zapi.datetotime('-1d'), selectAcknowledges='extend')
    
    # Count problems based on severity
    counts = {severity: 0 for severity in severity_mapping}
    for problem in recent_problems:
        if problem['acknowledges']:
            # Skip acknowledged problems
            continue
        severity = problem['severity']
        counts[severity] += 1

    problem_counts.append({'Host Group': group_name, **counts})

# Create a DataFrame from the collected data
df = pd.DataFrame(problem_counts)

# Reorder columns based on severity
severity_order = ['Not classified', 'Information', 'Warning', 'Average', 'High', 'Disaster']
df = df[['Host Group'] + severity_order]

# Save the DataFrame to an Excel file
df.to_excel('zabbix_problems.xlsx', index=False)
print("Data saved to 'zabbix_problems.xlsx'")

# Logout from Zabbix API
zapi.user.logout()
