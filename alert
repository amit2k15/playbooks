import requests
import json
import datetime
import openpyxl

# Zabbix API credentials
ZABBIX_URL = "http://your-zabbix-server/api_jsonrpc.php"
ZABBIX_USER = "your-username"
ZABBIX_PASSWORD = "your-password"

# Host groups to filter
HOST_GROUPS = ["abc", "def", "ghi"]

# Threshold for recent problems (in seconds)
RECENT_THRESHOLD = 86400  # 1 day in seconds

# Create an Excel workbook
workbook = openpyxl.Workbook()
sheet = workbook.active
sheet.title = "Recent Problems"

# Write headers
sheet["A1"] = "Host Group"
sheet["B1"] = "Not classified"
sheet["C1"] = "Information"
sheet["D1"] = "Warning"
sheet["E1"] = "Average"
sheet["F1"] = "High"
sheet["G1"] = "Disaster"

row = 2

# Function to fetch problems for a host group
def get_problems_for_host_group(host_group_name):
    data = {
        "jsonrpc": "2.0",
        "method": "problem.get",
        "params": {
            "output": ["groupid", "name", "severity", "lastchange"],
            "groupids": host_group_name,
            "sortfield": "lastchange",
            "sortorder": "DESC",
            "filter": {
                "value": 1
            }
        },
        "auth": "{}:{}".format(ZABBIX_USER, ZABBIX_PASSWORD),
        "id": 1
    }

    response = requests.post(ZABBIX_URL, json=data)
    result = json.loads(response.text)["result"]

    if "problems" in result:
        return result["problems"]
    else:
        return []

# Fetch and process problems for each host group
for host_group in HOST_GROUPS:
    problems = get_problems_for_host_group(host_group)

    severity_counts = {
        0: 0,  # Not classified
        1: 0,  # Information
        2: 0,  # Warning
        3: 0,  # Average
        4: 0,  # High
        5: 0   # Disaster
    }

    for problem in problems:
        last_change = datetime.datetime.fromtimestamp(problem["lastchange"])
        age = datetime.datetime.now() - last_change

        if age.seconds < RECENT_THRESHOLD:
            severity_counts[problem["severity"]] += 1

    sheet["A{}".format(row)] = host_group
    sheet["B{}".format(row):"G{}".format(row)] = list(severity_counts.values())
    row += 1

# Save the Excel file
workbook.save("recent_problems.xlsx")

print("Recent problems report generated successfully!")
