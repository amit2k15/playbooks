import requests
import pandas as pd
from datetime import datetime, timedelta

# Zabbix API configuration
zabbix_url = 'http://your-zabbix-server/zabbix/api_jsonrpc.php'
zabbix_user = 'your-zabbix-username'
zabbix_password = 'your-zabbix-password'

# Host group name
host_group_name = 'Your Host Group Name'

# Zabbix API authentication
def authenticate():
    headers = {'Content-Type': 'application/json'}
    data = {
        'jsonrpc': '2.0',
        'method': 'user.login',
        'params': {
            'user': zabbix_user,
            'password': zabbix_password,
        },
        'id': 1,
    }

    response = requests.post(zabbix_url, headers=headers, json=data)
    return response.json()['result']

# Get hosts in a specific host group
def get_hosts_in_group(group_name, auth_token):
    headers = {'Content-Type': 'application/json'}
    data = {
        'jsonrpc': '2.0',
        'method': 'hostgroup.get',
        'params': {
            'output': ['groupid'],
            'filter': {'name': group_name},
        },
        'auth': auth_token,
        'id': 1,
    }

    response = requests.post(zabbix_url, headers=headers, json=data)
    group_id = response.json()['result'][0]['groupid']

    data = {
        'jsonrpc': '2.0',
        'method': 'host.get',
        'params': {
            'output': ['hostid', 'host'],
            'groupids': group_id,
        },
        'auth': auth_token,
        'id': 1,
    }

    response = requests.post(zabbix_url, headers=headers, json=data)
    return response.json()['result']

# Get item values for a specific host
def get_item_values(host_id, item_key, auth_token):
    headers = {'Content-Type': 'application/json'}
    data = {
        'jsonrpc': '2.0',
        'method': 'item.get',
        'params': {
            'output': ['lastvalue'],
            'hostids': host_id,
            'search': {'key_': item_key},
        },
        'auth': auth_token,
        'id': 1,
    }

    response = requests.post(zabbix_url, headers=headers, json=data)
    return response.json()['result'][0]['lastvalue']

# Calculate last seen
def calculate_last_seen(last_seen):
    last_seen_datetime = datetime.fromtimestamp(int(last_seen))
    current_time = datetime.now()
    last_seen_delta = current_time - last_seen_datetime
    return last_seen_delta

# Main script
auth_token = authenticate()
hosts = get_hosts_in_group(host_group_name, auth_token)

data = []
for host in hosts:
    host_id = host['hostid']
    host_name = host['host']

    cpu_utilization = get_item_values(host_id, 'system.cpu.util', auth_token)
    memory_utilization = get_item_values(host_id, 'vm.memory.utilization', auth_token)
    queue = get_item_values(host_id, 'zabbix[queue,10m]', auth_token)
    uptime = get_item_values(host_id, 'system.uptime', auth_token)
    last_seen = get_item_values(host_id, 'zabbix[proxy,{HOST.HOST},lastaccess]', auth_token)

    last_seen_delta = calculate_last_seen(last_seen)

    data.append({
        'Host': host_name,
        'CPU Utilization': cpu_utilization,
        'Memory Utilization': memory_utilization,
        'Queue': queue,
        'Uptime': uptime,
        'Last Seen': last_seen_delta,
    })

# Create a Pandas DataFrame
df = pd.DataFrame(data)

# Save to Excel file
excel_file = 'zabbix_data.xlsx'
df.to_excel(excel_file, index=False)
print(f'Data saved to {excel_file}')
