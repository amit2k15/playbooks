import pandas as pd
from pyzabbix import ZabbixAPI
from datetime import datetime, timedelta

# Zabbix server information
zabbix_server = 'http://your-zabbix-server.com/zabbix'
zabbix_user = 'your_username'
zabbix_password = 'your_password'

# Host group name
host_group_name = 'YourHostGroupName'

# Connect to Zabbix server
zapi = ZabbixAPI(zabbix_server)
zapi.login(zabbix_user, zabbix_password)

# Get host group ID
host_group = zapi.hostgroup.get(filter={'name': host_group_name})
if not host_group:
    print(f"Host group '{host_group_name}' not found.")
    exit()

host_group_id = host_group[0]['groupid']

# Get hosts in the host group
hosts = zapi.host.get(groupids=[host_group_id], output=['hostid', 'host'])

# Define item names
item_names = {
    'CPU': 'system.cpu.util',
    'Memory': 'vm.memory.utilization',
    'Queue': 'zabbix[queue,10m]',
    'Uptime': 'system.uptime',
    'LastSeen': 'zabbix[proxy,{HOST.HOST},lastaccess]'
}

# Initialize data dictionary
data = {
    'Host': [],
    'CPU': [],
    'Memory': [],
    'Queue': [],
    'Uptime': [],
    'LastSeen': []
}

# Fetch data for each host
for host in hosts:
    data['Host'].append(host['host'])
    for param_name, item_key in item_names.items():
        item = zapi.item.get(hostids=host['hostid'], search={'key_': item_key}, output=['lastvalue', 'lastclock'])
        if item:
            last_value = float(item[0]['lastvalue'])
            last_seen_timestamp = int(item[0]['lastclock'])
            last_seen_datetime = datetime.utcfromtimestamp(last_seen_timestamp)
            
            # Calculate last seen in seconds
            current_time = datetime.utcnow()
            last_seen_seconds = (current_time - last_seen_datetime).total_seconds()

            # Calculate uptime in days
            uptime_days = last_value / (24 * 60 * 60)  # Convert seconds to days

            # Append data to dictionary
            data[param_name].append(round(last_seen_seconds, 2) if param_name == 'LastSeen' else round(uptime_days, 2))
        else:
            data[param_name].append(None)

# Create a DataFrame
df = pd.DataFrame(data)

# Save to Excel file
excel_filename = 'host_data.xlsx'
df.to_excel(excel_filename, index=False, engine='openpyxl')

print(f"Excel file '{excel_filename}' has been generated.")
