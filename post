from pyzabbix import ZabbixAPI
import pandas as pd

# Connect to the Zabbix API
zabbix_server = 'https://your_zabbix_server'
zabbix_user = 'your_username'
zabbix_password = 'your_password'

zapi = ZabbixAPI(zabbix_server)
zapi.login(zabbix_user, zabbix_password)

# Define the host group name
hostgroup_name = 'Your Host Group Name'

# Retrieve the host group ID
hostgroup = zapi.hostgroup.get(filter={'name': hostgroup_name})
if not hostgroup:
    print(f"Host group '{hostgroup_name}' not found.")
    exit()

hostgroup_id = hostgroup[0]['groupid']

# Retrieve hosts in the host group
hosts = zapi.host.get(groupids=hostgroup_id, output=['hostid', 'name', 'status'])

data = []

# Retrieve data for each host
for host in hosts:
    items = zapi.item.get(hostids=host['hostid'], 
                          output=['name', 'status', 'delay', 'params'],
                          filter={"templateid": ""}, # Exclude items from templates
                          search={"templateid": ["10081", "10082"]},
                          searchWildcardsEnabled=True,
                          selectTriggers=['description', 'status', 'priority'])

    for item in items:
        for trigger in item['triggers']:
            severity = {4: 'Major', 3: 'Warning', 2: 'Minor', 1: 'Information'}
            trigger_severity = severity.get(int(trigger['priority']), trigger['priority'])

            data.append({
                'Host Name': host['name'],
                'Host Status': 'Enabled' if host['status'] == '0' else 'Disabled',
                'Item Name': item['name'],
                'Item Params': item.get('params', ''),
                'Item Status': 'Enabled' if item['status'] == '0' else 'Disabled',
                'Delay': item['delay'],
                'Trigger Name': trigger['description'],
                'Trigger Status': 'Enabled' if trigger['status'] == '0' else 'Disabled',
                'Trigger Severity': trigger_severity
            })

# Create a DataFrame and save to Excel
df = pd.DataFrame(data)
excel_filename = f"{hostgroup_name}_report.xlsx"
df.to_excel(excel_filename, index=False)

print(f"Report generated: {excel_filename}")
