from pyzabbix import ZabbixAPI
import pandas as pd

# Function to get data from Zabbix API
def get_zabbix_data(zapi, hostgroup_name):
    # Get host group ID
    hostgroup = zapi.hostgroup.get(filter={"name": hostgroup_name})
    if not hostgroup:
        raise ValueError(f"Host group '{hostgroup_name}' not found")
    hostgroup_id = hostgroup[0]['groupid']
    
    # Get hosts in the host group
    hosts = zapi.host.get(groupids=hostgroup_id, output=["hostid", "name", "status"])
    
    # Prepare data containers
    data = []
    
    # Iterate over each host
    for host in hosts:
        host_id = host['hostid']
        host_status = 'Enabled' if host['status'] == '0' else 'Disabled'
        
        # Get items for the host
        items = zapi.item.get(hostids=host_id, output=["name", "status", "delay"])
        for item in items:
            item_status = 'Enabled' if item['status'] == '0' else 'Disabled'
            item_delay = item['delay']
            
            # Get triggers for the item
            triggers = zapi.trigger.get(itemids=item['itemid'], output=["description", "status", "priority"])
            for trigger in triggers:
                trigger_status = 'Enabled' if trigger['status'] == '0' else 'Disabled'
                trigger_severity = trigger['priority']
                
                # Get web scenarios for the host
                webscenarios = zapi.httptest.get(hostids=host_id, output=["name", "status"])
                for webscenario in webscenarios:
                    webscenario_status = 'Enabled' if webscenario['status'] == '0' else 'Disabled'
                    webscenario_name = webscenario['name']
                    
                    # Get URLs for the web scenario
                    steps = zapi.httptest.get(testids=webscenario['httptestid'], output=["steps"])
                    for step in steps[0]['steps']:
                        url = step['url']
                        delay = step['delay']
                        
                        # Get database monitors for the host
                        db_monitors = zapi.db.odbc.query.get(hostids=host_id, output=["name", "sql_query", "delay"])
                        for db_monitor in db_monitors:
                            db_monitor_name = db_monitor['name']
                            db_monitor_query = db_monitor['sql_query']
                            db_monitor_delay = db_monitor['delay']
                            
                            # Collect data
                            data.append([
                                host['name'], host_status, item['name'], item_status, item_delay,
                                webscenario_name, webscenario_status, url, delay,
                                trigger['description'], trigger_status, trigger_severity,
                                db_monitor_name, db_monitor_query, db_monitor_delay
                            ])
    
    return data

# Main function
def main(zabbix_url, zabbix_user, zabbix_password, hostgroup_name, output_file):
    # Connect to Zabbix API
    zapi = ZabbixAPI(zabbix_url)
    zapi.login(zabbix_user, zabbix_password)
    
    # Get data from Zabbix
    data = get_zabbix_data(zapi, hostgroup_name)
    
    # Create a DataFrame
    df = pd.DataFrame(data, columns=[
        'Host Name', 'Host Status', 'Item Name', 'Item Status', 'Item Delay',
        'Web Scenario Name', 'Web Scenario Status', 'URL', 'URL Delay',
        'Trigger Name', 'Trigger Status', 'Trigger Severity',
        'Database Monitor Name', 'Database Monitor SQL Query', 'Database Monitor Interval'
    ])
    
    # Save DataFrame to Excel
    df.to_excel(output_file, index=False)
    print(f"Data has been saved to {output_file}")

# Execute main function
if __name__ == "__main__":
    zabbix_url = "http://your_zabbix_server/zabbix"
    zabbix_user = "your_username"
    zabbix_password = "your_password"
    hostgroup_name = "Your Host Group"
    output_file = "zabbix_report.xlsx"
    
    main(zabbix_url, zabbix_user, zabbix_password, hostgroup_name, output_file)
