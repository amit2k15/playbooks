from pyzabbix import ZabbixAPI
import pandas as pd

# Zabbix server URL and credentials
ZABBIX_SERVER = 'http://your_zabbix_server/zabbix'
ZABBIX_USER = 'your_username'
ZABBIX_PASSWORD = 'your_password'

# Host group name
HOST_GROUP_NAME = 'your_host_group_name'

# Connect to Zabbix API
zapi = ZabbixAPI(ZABBIX_SERVER)
zapi.login(ZABBIX_USER, ZABBIX_PASSWORD)

# Get the host group ID
host_groups = zapi.hostgroup.get(filter={"name": HOST_GROUP_NAME})
if not host_groups:
    raise ValueError(f"Host group '{HOST_GROUP_NAME}' not found.")
host_group_id = host_groups[0]['groupid']

# Get the hosts in the specified host group
hosts = zapi.host.get(groupids=host_group_id, output=['hostid', 'name', 'status'])
host_ids = [host['hostid'] for host in hosts]

# Get the web scenarios for the hosts
web_scenarios = zapi.httptest.get(hostids=host_ids, output=['name', 'delay', 'status'], selectSteps=['name', 'url', 'status', 'stepid'])

# Prepare data for the Excel sheet (web scenarios)
data = []
for scenario in web_scenarios:
    for step in scenario['steps']:
        data.append({
            'Host Group': HOST_GROUP_NAME,
            'Web Scenario Name': scenario['name'],
            'Step Name': step['name'],
            'URL': step['url'],
            'Step Status': 'Enabled' if step['status'] == '0' else 'Disabled',
            'Delay': scenario['delay'],
            'Scenario Status': 'Enabled' if scenario['status'] == '0' else 'Disabled'
        })

# Get triggers for the hosts (web scenarios)
triggers = zapi.trigger.get(hostids=host_ids, output=['description', 'priority', 'status'], selectHosts=['name'])

# Add trigger information to DataFrame
for trigger in triggers:
    for host in trigger['hosts']:
        for index, row in enumerate(data):
            if row['Web Scenario Name'] == host['name']:
                data[index]['Trigger Name'] = trigger['description']
                data[index]['Trigger Status'] = 'Enabled' if trigger['status'] == '0' else 'Disabled'
                data[index]['Trigger Severity'] = trigger['priority']

# Retrieve data for each host (items and triggers)
for host in hosts:
    items = zapi.item.get(hostids=host['hostid'], 
                          output=['name', 'status', 'delay', 'params'],
                          filter={"templateid": ""}, # Exclude items from templates
                          search={"templateid": ["10081", "10082"]},
                          searchWildcardsEnabled=True,
                          selectTriggers=['description', 'status', 'priority'])

    for item in items:
        for trigger in item['triggers']:
            severity = {4: 'Major', 3: 'Warning', 2: 'Minor', 1: 'Information'}
            trigger_severity = severity.get(int(trigger['priority']), trigger['priority'])

            data.append({
                'Host Group': HOST_GROUP_NAME,
                'Host Name': host['name'],
                'Host Status': 'Enabled' if host['status'] == '0' else 'Disabled',
                'Item Name': item['name'],
                'Item Params': item.get('params', ''),
                'Item Status': 'Enabled' if item['status'] == '0' else 'Disabled',
                'Delay': item['delay'],
                'Trigger Name': trigger['description'],
                'Trigger Status': 'Enabled' if trigger['status'] == '0' else 'Disabled',
                'Trigger Severity': trigger_severity
            })

# Create a DataFrame and save to Excel
df = pd.DataFrame(data)
excel_filename = f"{HOST_GROUP_NAME}_report.xlsx"
df.to_excel(excel_filename, index=False)

print(f"Report generated: {excel_filename}")
