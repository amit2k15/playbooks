import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from datetime import datetime
import openpyxl
from zabbix_api import ZabbixAPI

# Zabbix server information
zabbix_server = 'http://your-zabbix-server.com/zabbix'
zabbix_user = 'your-username'
zabbix_password = 'your-password'

# Host group name
host_group_name = 'YourHostGroupName'

# Connect to Zabbix API
zabbix = ZabbixAPI(zabbix_server)
zabbix.login(zabbix_user, zabbix_password)

# Get host group ID
host_group = zabbix.hostgroup.get(filter={'name': host_group_name})
host_group_id = host_group[0]['groupid']

# Get hosts in the specified host group
hosts = zabbix.host.get(groupids=host_group_id, output=['hostid', 'host'])

# Create email content
email_content = "<h2>Zabbix Proxy Report</h2>"
email_content += "<table border='1'><tr><th>Host</th><th>CPU Utilization (%)</th><th>Memory Utilization (%)</th><th>Queue</th><th>Uptime (days)</th><th>Last Seen (seconds)</th></tr>"

# Iterate through hosts
for host in hosts:
    host_id = host['hostid']
    host_name = host['host']

    # Get CPU Utilization
    cpu_util = zabbix.item.get(hostids=host_id, search={'key_': 'system.cpu.util'}, output=['lastvalue'])[0]['lastvalue']
    cpu_util = round(float(cpu_util), 2) if cpu_util else None

    # Get Memory Utilization
    memory_util = zabbix.item.get(hostids=host_id, search={'key_': 'vm.memory.utilization'}, output=['lastvalue'])[0]['lastvalue']
    memory_util = round(float(memory_util), 2) if memory_util else None

    # Get Queue
    queue = zabbix.item.get(hostids=host_id, search={'key_': 'zabbix[queue,10m]'}, output=['lastvalue'])[0]['lastvalue']

    # Get Uptime
    uptime_seconds = zabbix.item.get(hostids=host_id, search={'key_': 'system.uptime'}, output=['lastvalue'])[0]['lastvalue']
    uptime_days = round(float(uptime_seconds) / (24 * 60 * 60), 2) if uptime_seconds else None

    # Get Last Seen
    last_seen_seconds = zabbix.item.get(hostids=host_id, search={'key_': 'zabbix[proxy,{HOST.HOST},lastaccess]'}, output=['lastvalue'])[0]['lastvalue']
    last_seen_seconds = float(last_seen_seconds) if last_seen_seconds else None

    # Calculate Last Seen in seconds
    current_time_seconds = datetime.now().timestamp()
    last_seen_difference = current_time_seconds - last_seen_seconds if last_seen_seconds else None

    # Determine color based on thresholds
    if 85 < cpu_util < 90 or 85 < memory_util < 90 or 85 < queue < 90:
        color = 'Orange'
    elif cpu_util >= 90 or memory_util >= 90 or queue >= 90:
        color = 'Red'
    else:
        color = 'Green'

    # Append data to the email content with color
    email_content += f"<tr><td>{host_name}</td><td style='color:{color}'>{cpu_util}</td><td style='color:{color}'>{memory_util}</td><td style='color:{color}'>{queue}</td><td style='color:{color}'>{uptime_days}</td><td style='color:{color}'>{last_seen_difference}</td></tr>"

# Close the HTML table
email_content += "</table>"

# Update the email subject based on color
subject_color = 'RED' if 'Red' in email_content else 'ORANGE' if 'Orange' in email_content else 'GREEN'
subject = f'Zabbix Proxy Report {datetime.now().strftime("%Y-%m-%d")} - {subject_color}'

# Logout from Zabbix API
zabbix.user.logout()

# Sending email using smtplib
from_email = 'amit_t@t.com'
to_email = 'kumaramitnayak@gmail.com'
smtp_server = 'your-smtp-server.com'

msg = MIMEMultipart()
msg['From'] = from_email
msg['To'] = to_email
msg['Subject'] = subject
msg.attach(MIMEText(email_content, 'html'))

# Connect to the SMTP server and send the email
with smtplib.SMTP(smtp_server) as server:
    server.sendmail(from_email, to_email, msg.as_string())

print(f'Email with Zabbix Proxy Report sent to {to_email}')
