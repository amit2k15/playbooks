import pandas as pd
from pyzabbix import ZabbixAPI

# Zabbix server URL and credentials
ZABBIX_SERVER = 'http://your_zabbix_server/zabbix'
ZABBIX_USER = 'your_username'
ZABBIX_PASSWORD = 'your_password'

# Host group name
HOST_GROUP_NAME = 'your_host_group_name'

# Connect to Zabbix API
zapi = ZabbixAPI(ZABBIX_SERVER)
zapi.login(ZABBIX_USER, ZABBIX_PASSWORD)

# Get the host group ID
host_groups = zapi.hostgroup.get(filter={"name": HOST_GROUP_NAME})
if not host_groups:
    raise ValueError(f"Host group '{HOST_GROUP_NAME}' not found.")
host_group_id = host_groups[0]['groupid']

# Get the hosts in the specified host group
hosts = zapi.host.get(groupids=host_group_id, output=['hostid', 'name'])
host_ids = [host['hostid'] for host in hosts]

# Get the web scenarios for the hosts
web_scenarios = zapi.httptest.get(hostids=host_ids, output=['name', 'delay', 'status'], selectSteps=['name', 'url', 'status', 'stepid'])

# Prepare data for the Excel sheet
data = []
for scenario in web_scenarios:
    for step in scenario['steps']:
        trigger_name = ""
        trigger_status = ""
        trigger_severity = ""

        # Check for trigger description containing keywords or URL
        for keyword in ["response", "change"]:
            if keyword.lower() in scenario['description'].lower():
                trigger_name = scenario['description']
                trigger_status = "Enabled" if scenario['status'] == '0' else 'Disabled'
                break

        if not trigger_name and step.get('url'):
            trigger_name = step['url']
            trigger_status = "Enabled" if scenario['status'] == '0' else 'Disabled'

        data.append({
            'Web Scenario Name': scenario['name'],
            'Step Name': step['name'],
            'URL': step['url'],
            'Step Status': 'Enabled' if step['status'] == '0' else 'Disabled',
            'Delay': scenario['delay'],
            'Scenario Status': 'Enabled' if scenario['status'] == '0' else 'Disabled',
            'Trigger Name': trigger_name,
            'Trigger Status': trigger_status,
        })

# Convert data to DataFrame
df = pd.DataFrame(data)

# Get triggers for the hosts
triggers = zapi.trigger.get(hostids=host_ids, output=['description', 'priority', 'status'], selectHosts=['name'])

# Map trigger severity
severity_map = {
    1: "Information",
    2: "Minor",
    3: "Warning",
    4: "Major",
}

# Add trigger information to DataFrame
for trigger in triggers:
    for host in trigger['hosts']:
        if trigger['description']:
            df.loc[(df['Web Scenario Name'] == host['name']) & (df['Trigger Name'] == trigger['description']), 'Trigger Severity'] = severity_map.get(trigger['priority'])

# Save DataFrame to Excel
df.to_excel('web_scenarios.xlsx', index=False)
print('Data has been written to web_scenarios.xlsx')
