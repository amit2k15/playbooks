from pyzabbix import ZabbixAPI
import pandas as pd

# Zabbix server details
ZABBIX_SERVER = 'http://your_zabbix_server'
ZABBIX_USER = 'your_zabbix_username'
ZABBIX_PASSWORD = 'your_zabbix_password'
HOST_GROUP_NAME = 'Your Host Group Name'

# Connect to Zabbix API
zapi = ZabbixAPI(ZABBIX_SERVER)
zapi.login(ZABBIX_USER, ZABBIX_PASSWORD)

# Fetch host group ID
host_group = zapi.hostgroup.get(filter={"name": HOST_GROUP_NAME})
if not host_group:
    print(f"Host group '{HOST_GROUP_NAME}' not found")
    exit(1)
host_group_id = host_group[0]['groupid']

# Fetch hosts in the host group
hosts = zapi.host.get(groupids=host_group_id)

# Define severity conversion
severity_map = {
    '1': 'minor',
    '2': 'minor',
    '3': 'warning',
    '4': 'major',
}

data = []

for host in hosts:
    hostname = host['name']

    # Fetch web scenarios for the host
    web_scenarios = zapi.httptest.get(hostids=host['hostid'])
    for scenario in web_scenarios:
        scenario_name = scenario['name']
        scenario_status = 'Enabled' if scenario['status'] == '0' else 'Disabled'
        delay = scenario['delay']

        # Fetch steps in the web scenario to get URLs
        scenario_steps = zapi.httptestitem.get(httptestid=scenario['httptestid'])
        urls = [step['url'] for step in scenario_steps]

        # Fetch triggers related to the scenario
        triggers = zapi.trigger.get(hostids=host['hostid'])
        for trigger in triggers:
            trigger_name = trigger['description']
            trigger_severity = severity_map.get(trigger['priority'], 'unknown')
            trigger_status = 'Enabled' if trigger['status'] == '0' else 'Disabled'

            data.append([
                hostname,
                scenario_name,
                urls,
                delay,
                scenario_status,
                trigger_name,
                trigger_severity,
                trigger_status
            ])

# Create DataFrame and save to Excel
df = pd.DataFrame(data, columns=[
    'Hostname', 'Web Scenario Name', 'URLs', 'Delay', 'Scenario Status',
    'Trigger Name', 'Trigger Severity', 'Trigger Status'
])
df.to_excel('zabbix_web_scenarios.xlsx', index=False)
print("Data saved to zabbix_web_scenarios.xlsx")
