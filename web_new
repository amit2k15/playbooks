from pyzabbix import ZabbixAPI
import pandas as pd

# Zabbix server URL and credentials
ZABBIX_SERVER = 'http://your_zabbix_server/zabbix'
ZABBIX_USER = 'your_username'
ZABBIX_PASSWORD = 'your_password'

# Host group name
HOST_GROUP_NAME = 'your_host_group_name'

# Connect to Zabbix API
zapi = ZabbixAPI(ZABBIX_SERVER)
zapi.login(ZABBIX_USER, ZABBIX_PASSWORD)

# Get the host group ID
host_groups = zapi.hostgroup.get(filter={"name": HOST_GROUP_NAME})
if not host_groups:
    raise ValueError(f"Host group '{HOST_GROUP_NAME}' not found.")
host_group_id = host_groups[0]['groupid']

# Get the hosts in the specified host group
hosts = zapi.host.get(groupids=host_group_id, output=['hostid', 'name'])
host_ids = [host['hostid'] for host in hosts]

# Get web scenarios and associated triggers for the hosts
web_scenarios = zapi.httptest.get(
    hostids=host_ids,
    output=['name', 'delay', 'status'],
    selectSteps=['name', 'url', 'status', 'stepid'],
    selectTriggers=['description', 'priority', 'status']  # Added trigger selection
)

# Prepare data for the Excel sheet
data = []
for scenario in web_scenarios:
    trigger_info = None
    # Find associated trigger for the scenario (if any)
    for trigger in scenario['triggers']:
        if trigger['description'] in scenario['name']:  # Assuming trigger name matches scenario name (modify if needed)
            trigger_info = {
                'Trigger Name': trigger['description'],
                'Trigger Status': 'Enabled' if trigger['status'] == '0' else 'Disabled',
                'Trigger Severity': trigger['priority'],
            }
            break  # Stop after finding the first matching trigger
    
    for step in scenario['steps']:
        data.append({
            'Web Scenario Name': scenario['name'],
            'Step Name': step['name'],
            'URL': step['url'],
            'Step Status': 'Enabled' if step['status'] == '0' else 'Disabled',
            'Delay': scenario['delay'],
            **trigger_info if trigger_info else {},  # Add trigger info if found
        })

# Convert data to DataFrame
df = pd.DataFrame(data)

# Save DataFrame to Excel
df.to_excel('web_scenarios.xlsx', index=False)

print('Data has been written to web_scenarios.xlsx with trigger details')
