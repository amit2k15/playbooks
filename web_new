from pyzabbix import ZabbixAPI, ZabbixAPIException
import pandas as pd

# Zabbix server details
ZABBIX_URL = 'https://your_zabbix_server_url/zabbix'
ZABBIX_USER = 'your_username'
ZABBIX_PASSWORD = 'your_password'

# Initialize Zabbix API
zabbix = ZabbixAPI(ZABBIX_URL)
zabbix.login(ZABBIX_USER, ZABBIX_PASSWORD)

def get_hostgroup_id(group_name):
    """Get host group ID by name."""
    groups = zabbix.hostgroup.get(filter={'name': group_name})
    if groups:
        return groups[0]['groupid']
    else:
        raise ValueError(f"Host group '{group_name}' not found.")

def get_hosts_in_group(group_name):
    """Get hosts in a host group."""
    group_id = get_hostgroup_id(group_name)
    hosts = zabbix.host.get(groupids=group_id, output=['hostid', 'name'])
    return hosts

def get_web_scenario_data(host_id):
    """Get web scenario data for a host."""
    scenarios = zabbix.httptest.get(hostids=host_id,
                                    output=['httptestid', 'name', 'delay', 'status', 'url'],
                                    selectTriggers='extend')
    return scenarios

def get_trigger_severity(severity_num):
    """Convert Zabbix trigger severity to custom severity."""
    if severity_num == '1':
        return 'Information'
    elif severity_num == '2':
        return 'Minor'
    elif severity_num == '3':
        return 'Warning'
    elif severity_num == '4':
        return 'Major'
    else:
        return 'Unknown'

def fetch_data_for_host_group(group_name):
    """Fetch required data for hosts in a host group."""
    hosts = get_hosts_in_group(group_name)
    data = []

    for host in hosts:
        host_id = host['hostid']
        host_name = host['name']
        scenarios = get_web_scenario_data(host_id)
        
        for scenario in scenarios:
            scenario_name = scenario['name']
            scenario_delay = scenario['delay']
            scenario_status = scenario['status']
            scenario_url = scenario['url']
            
            for trigger in scenario['triggers']:
                trigger_name = trigger['description']
                trigger_severity = get_trigger_severity(trigger['priority'])
                trigger_status = trigger['status']

                data.append({
                    'Host Name': host_name,
                    'Scenario Name': scenario_name,
                    'Delay': scenario_delay,
                    'Status': scenario_status,
                    'URL': scenario_url,
                    'Trigger Name': trigger_name,
                    'Trigger Severity': trigger_severity,
                    'Trigger Status': trigger_status
                })

    return data

def save_to_excel(data, filename):
    """Save data to Excel."""
    df = pd.DataFrame(data)
    df.to_excel(filename, index=False)

if __name__ == '__main__':
    host_group_name = 'Your Host Group Name'
    output_filename = 'zabbix_data.xlsx'

    try:
        data = fetch_data_for_host_group(host_group_name)
        save_to_excel(data, output_filename)
        print(f"Data saved to {output_filename}")
    except ZabbixAPIException as e:
        print(f"Zabbix API error: {e}")
    except ValueError as e:
        print(f"Error: {e}")
    except Exception as e:
        print(f"Unexpected error: {e}")
    finally:
        zabbix.logout()
